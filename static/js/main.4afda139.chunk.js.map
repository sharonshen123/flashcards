{"version":3,"sources":["Flashcard.js","FlashcardList.js","App.js","index.js"],"names":["Flashcard","flashcard","useState","flip","setFlip","height","setHeight","frontEl","useRef","backEl","setMaxHeight","frontHeight","current","getBoundingClientRect","backHeight","Math","max","useEffect","question","answer","options","window","addEventListener","removeEventListener","className","style","onClick","ref","map","option","key","FlashcardList","flashcards","id","ISLT","App","setFlashcards","categories","setCategories","categoryEl","amountEl","decodeString","str","textArea","document","createElement","innerHTML","value","axios","get","then","res","data","trivia_categories","onSubmit","e","preventDefault","params","amount","category","results","questionItem","index","correct_answer","incorrect_answers","a","Date","now","sort","random","htmlFor","name","type","min","step","defaultValue","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4afda139.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\n\nexport default function Flashcard({ flashcard }) {\n  const [flip, setFlip] = useState(false)\n  const [height, setHeight] = useState('initial')\n\n  const frontEl = useRef()\n  const backEl = useRef()\n\n  function setMaxHeight() {\n    const frontHeight = frontEl.current.getBoundingClientRect().height\n    const backHeight = backEl.current.getBoundingClientRect().height\n    setHeight(Math.max(frontHeight, backHeight, 100))\n  }\n\n  useEffect(setMaxHeight, [flashcard.question, flashcard.answer, flashcard.options])\n  useEffect(() => {\n    window.addEventListener('resize', setMaxHeight)\n    return () => window.removeEventListener('resize', setMaxHeight)\n  }, [])\n\n  return (\n    <div\n      className={`card ${flip ? 'flip' : ''}`}\n      style={{ height: height }}\n      onClick={() => setFlip(!flip)}\n    >\n      <div className=\"front\" ref={frontEl}>\n        {flashcard.question}\n        <div className=\"flashcard-options\">\n          {flashcard.options.map(option => {\n            return <div className=\"flashcard-option\" key={option}>{option}</div>\n          })}\n        </div>\n      </div>\n      <div className=\"back\" ref={backEl}>{flashcard.answer}</div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Flashcard from './Flashcard';\n\nexport default function FlashcardList({ flashcards }) {\n  return (\n    <div className=\"card-grid\">\n      {flashcards.map(flashcard => {\n        return <Flashcard flashcard={flashcard} key={flashcard.id} />\n      })}\n    </div>\n  )\n}\n","import React, { useState, useEffect, useRef } from 'react';\nimport FlashcardList from './FlashcardList';\nimport './App.css'\nimport axios from 'axios'\n\nfunction App() {\n  const [flashcards, setFlashcards] = useState(ISLT)\n  const [categories, setCategories] = useState([])\n\n  const categoryEl = useRef()\n  const amountEl = useRef()\n\n  useEffect(() => {\n    axios\n      .get('https://opentdb.com/api_category.php')\n      .then(res => {\n        setCategories(res.data.trivia_categories)\n      })\n  }, [])\n\n  useEffect(() => {\n   \n  }, [])\n\n  function decodeString(str) {\n    const textArea = document.createElement('textarea')\n    textArea.innerHTML= str\n    return textArea.value\n  }\n  function getCards(){\n    const sampleCards =  {\"results\":[{\"category\":\"General Knowledge\",\"type\":\"multiple\",\"difficulty\":\"easy\",\"question\":\"What is the profession of Elon Musk&#039;s mom, Maye Musk?\",\"correct_answer\":\"Model\",\"incorrect_answers\":[\"Professor\",\"Biologist\",\"Musician\"]}]}\n    return sampleCards\n  }\n  function handleSubmit(e) {\n   \n    e.preventDefault()\n    axios\n    .get('https://opentdb.com/api.php', {\n      params: {\n        amount: amountEl.current.value,\n        category: categoryEl.current.value\n      }\n    })\n    .then(res => {\n      setFlashcards(res.data.results.map((questionItem, index) => {\n        const answer = decodeString(questionItem.correct_answer)\n        const options = [\n          ...questionItem.incorrect_answers.map(a => decodeString(a)),\n          answer\n        ]\n        return {\n          id: `${index}-${Date.now()}`,\n          question: decodeString(questionItem.question),\n          answer: answer,\n          options: options.sort(() => Math.random() - .5)\n        }\n      }))\n    })\n\n    \n    \n    \n    /*setFlashcards(getCards().results.map((questionItem, index) => {\n        const answer = decodeString(questionItem.correct_answer)\n        const options = [\n          ...questionItem.incorrect_answers.map(a => decodeString(a)),\n          answer\n        ]\n        return {\n          id: `${index}-${Date.now()}`,\n          question: decodeString(questionItem.question),\n          answer: answer,\n          options: options.sort(() => Math.random() - .5)\n        }\n\n    }))*/\n    \n  }\n\n  return (\n    <>\n      <form className=\"header\" onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"category\">Category</label>\n          <select id=\"category\" ref={categoryEl}>\n          {categories.map(category => {\n              return <option value={category.id} key={category.id}>{category.name}</option>\n            })}\n            <option value={50} key={50}>Adj</option>\n          </select>\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"amount\">Number of Questions</label>\n          <input type=\"number\" id=\"amount\" min=\"1\" step=\"1\" defaultValue={10} ref={amountEl} />\n        </div>\n        <div className=\"form-group\">\n          <button className=\"btn\">Generate</button>\n        </div>\n      </form>\n      <div className=\"container\">\n        <FlashcardList flashcards={flashcards} />\n      </div>\n    </>\n  );\n}\nconst ISLT = [\n  {\n    id: 50,\n    question: 'serpentinesss',\n    answer: 'sinuous',\n    options: [\n      '1',\n      '2'\n    ]\n  },\n  {\n    id: 51,\n    question: 'thrall',\n    answer: 'the state of being in someones power or having great power over someone',\n    options: [\n      \"while I'm was asleep I had returned without the least effort to an earlier stage in my life, now for ever outgrown; and had come under the thrall of one of my childish terrors, such as that old terror of my great-uncles pulling my curls, which was effectually dispelled on the day—the dawn of a new era to me-on which they were finally cropped from my head. \"\n    ]\n  }\n]\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}